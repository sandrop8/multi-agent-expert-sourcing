"""Add comprehensive CV schema with industries and freelancer fields

Revision ID: c15e3c35108d
Revises:
Create Date: 2025-06-14 23:17:48.085468

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "c15e3c35108d"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cv_files",
        sa.Column("filename", sa.String(length=255), nullable=False),
        sa.Column("original_filename", sa.String(length=255), nullable=False),
        sa.Column("file_format", sa.String(length=10), nullable=False),
        sa.Column("file_size", sa.Integer(), nullable=False),
        sa.Column("content_type", sa.String(length=100), nullable=False),
        sa.Column("file_data", sa.LargeBinary(), nullable=False),
        sa.Column("processing_status", sa.String(length=50), nullable=False),
        sa.Column("extraction_provider", sa.String(length=50), nullable=True),
        sa.Column(
            "extraction_confidence", sa.DECIMAL(precision=3, scale=2), nullable=True
        ),
        sa.Column("processed", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_cv_files_id"), "cv_files", ["id"], unique=False)
    op.create_table(
        "cv_certifications",
        sa.Column("cv_file_id", sa.Integer(), nullable=False),
        sa.Column("certification_name", sa.String(length=255), nullable=False),
        sa.Column("issuing_organization", sa.String(length=255), nullable=True),
        sa.Column("issue_date", sa.Date(), nullable=True),
        sa.Column("expiry_date", sa.Date(), nullable=True),
        sa.Column("credential_id", sa.String(length=255), nullable=True),
        sa.Column("verification_url", sa.String(length=500), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["cv_file_id"], ["cv_files.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_cv_certifications_cv_file_id"),
        "cv_certifications",
        ["cv_file_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_cv_certifications_id"), "cv_certifications", ["id"], unique=False
    )
    op.create_table(
        "cv_education",
        sa.Column("cv_file_id", sa.Integer(), nullable=False),
        sa.Column("institution", sa.String(length=255), nullable=False),
        sa.Column("degree", sa.String(length=255), nullable=False),
        sa.Column("field_of_study", sa.String(length=255), nullable=True),
        sa.Column("graduation_year", sa.Integer(), nullable=True),
        sa.Column("grade_gpa", sa.String(length=50), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("education_order", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["cv_file_id"], ["cv_files.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_cv_education_cv_file_id"), "cv_education", ["cv_file_id"], unique=False
    )
    op.create_index(op.f("ix_cv_education_id"), "cv_education", ["id"], unique=False)
    op.create_table(
        "cv_employment",
        sa.Column("cv_file_id", sa.Integer(), nullable=False),
        sa.Column("company_name", sa.String(length=255), nullable=False),
        sa.Column("job_title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("location", sa.String(length=255), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("is_current", sa.Boolean(), nullable=False),
        sa.Column("duration_months", sa.Integer(), nullable=True),
        sa.Column("employment_order", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["cv_file_id"], ["cv_files.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_cv_employment_cv_file_id"),
        "cv_employment",
        ["cv_file_id"],
        unique=False,
    )
    op.create_index(op.f("ix_cv_employment_id"), "cv_employment", ["id"], unique=False)
    op.create_table(
        "cv_personal_info",
        sa.Column("cv_file_id", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(length=255), nullable=True),
        sa.Column("last_name", sa.String(length=255), nullable=True),
        sa.Column("phone", sa.String(length=50), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column("professional_title", sa.String(length=255), nullable=True),
        sa.Column("summary", sa.Text(), nullable=True),
        sa.Column("website_url", sa.String(length=500), nullable=True),
        sa.Column("linkedin_url", sa.String(length=500), nullable=True),
        sa.Column("xing_url", sa.String(length=500), nullable=True),
        sa.Column("github_url", sa.String(length=500), nullable=True),
        sa.Column("street", sa.String(length=255), nullable=True),
        sa.Column("street_number", sa.String(length=20), nullable=True),
        sa.Column("plz", sa.String(length=10), nullable=True),
        sa.Column("city", sa.String(length=255), nullable=True),
        sa.Column("country", sa.String(length=100), nullable=True),
        sa.Column("languages", sa.JSON(), nullable=True),
        sa.Column("work_preferences", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("industries", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("skills_array", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("top_skills", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("total_years_experience", sa.Integer(), nullable=True),
        sa.Column("hours_per_week_available", sa.Integer(), nullable=True),
        sa.Column("available_start_date", sa.Date(), nullable=True),
        sa.Column(
            "hourly_rate_single", sa.DECIMAL(precision=8, scale=2), nullable=True
        ),
        sa.Column("hourly_rate_min", sa.DECIMAL(precision=8, scale=2), nullable=True),
        sa.Column("hourly_rate_max", sa.DECIMAL(precision=8, scale=2), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["cv_file_id"], ["cv_files.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_cv_personal_info_cv_file_id"),
        "cv_personal_info",
        ["cv_file_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_cv_personal_info_id"), "cv_personal_info", ["id"], unique=False
    )
    op.create_table(
        "cv_professional_services",
        sa.Column("cv_file_id", sa.Integer(), nullable=False),
        sa.Column(
            "management_sales_hr_services", postgresql.ARRAY(sa.String()), nullable=True
        ),
        sa.Column(
            "marketing_design_services", postgresql.ARRAY(sa.String()), nullable=True
        ),
        sa.Column("engineering_services", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("it_services", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["cv_file_id"], ["cv_files.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_cv_professional_services_cv_file_id"),
        "cv_professional_services",
        ["cv_file_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_cv_professional_services_id"),
        "cv_professional_services",
        ["id"],
        unique=False,
    )
    op.create_table(
        "cv_projects",
        sa.Column("cv_file_id", sa.Integer(), nullable=False),
        sa.Column("project_name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("technologies_used", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("project_url", sa.String(length=500), nullable=True),
        sa.Column("github_url", sa.String(length=500), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["cv_file_id"], ["cv_files.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_cv_projects_cv_file_id"), "cv_projects", ["cv_file_id"], unique=False
    )
    op.create_index(op.f("ix_cv_projects_id"), "cv_projects", ["id"], unique=False)
    op.create_table(
        "cv_skills",
        sa.Column("cv_file_id", sa.Integer(), nullable=False),
        sa.Column("skill_name", sa.String(length=255), nullable=False),
        sa.Column("skill_category", sa.String(length=100), nullable=True),
        sa.Column("proficiency_level", sa.String(length=50), nullable=True),
        sa.Column("years_experience", sa.Integer(), nullable=True),
        sa.Column("is_primary_skill", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["cv_file_id"], ["cv_files.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_cv_skills_cv_file_id"), "cv_skills", ["cv_file_id"], unique=False
    )
    op.create_index(op.f("ix_cv_skills_id"), "cv_skills", ["id"], unique=False)
    op.create_index(
        op.f("ix_cv_skills_skill_category"),
        "cv_skills",
        ["skill_category"],
        unique=False,
    )
    # COMMENTED OUT: Keep old tables for backward compatibility during transition
    # op.drop_table('messages')
    # op.drop_table('cvs')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cvs",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "filename", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "original_filename",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("file_size", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "content_type", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
        sa.Column("file_data", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column(
            "uploaded_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("processed", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("cvs_pkey")),
    )
    op.create_table(
        "messages",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("role", sa.VARCHAR(length=10), autoincrement=False, nullable=True),
        sa.Column("content", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ts", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("messages_pkey")),
    )
    op.drop_index(op.f("ix_cv_skills_skill_category"), table_name="cv_skills")
    op.drop_index(op.f("ix_cv_skills_id"), table_name="cv_skills")
    op.drop_index(op.f("ix_cv_skills_cv_file_id"), table_name="cv_skills")
    op.drop_table("cv_skills")
    op.drop_index(op.f("ix_cv_projects_id"), table_name="cv_projects")
    op.drop_index(op.f("ix_cv_projects_cv_file_id"), table_name="cv_projects")
    op.drop_table("cv_projects")
    op.drop_index(
        op.f("ix_cv_professional_services_id"), table_name="cv_professional_services"
    )
    op.drop_index(
        op.f("ix_cv_professional_services_cv_file_id"),
        table_name="cv_professional_services",
    )
    op.drop_table("cv_professional_services")
    op.drop_index(op.f("ix_cv_personal_info_id"), table_name="cv_personal_info")
    op.drop_index(op.f("ix_cv_personal_info_cv_file_id"), table_name="cv_personal_info")
    op.drop_table("cv_personal_info")
    op.drop_index(op.f("ix_cv_employment_id"), table_name="cv_employment")
    op.drop_index(op.f("ix_cv_employment_cv_file_id"), table_name="cv_employment")
    op.drop_table("cv_employment")
    op.drop_index(op.f("ix_cv_education_id"), table_name="cv_education")
    op.drop_index(op.f("ix_cv_education_cv_file_id"), table_name="cv_education")
    op.drop_table("cv_education")
    op.drop_index(op.f("ix_cv_certifications_id"), table_name="cv_certifications")
    op.drop_index(
        op.f("ix_cv_certifications_cv_file_id"), table_name="cv_certifications"
    )
    op.drop_table("cv_certifications")
    op.drop_index(op.f("ix_cv_files_id"), table_name="cv_files")
    op.drop_table("cv_files")
    # ### end Alembic commands ###
